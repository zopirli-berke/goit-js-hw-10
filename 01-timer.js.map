{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector(`#datetime-picker`);\nconst startBtn = document.querySelector(`[data-start]`);\n\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nlet selectedDate = null;\nlet timerId = null;\n\nstartBtn.disabled = true;\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n\n    if (selectedDates[0] <= now) {\n      iziToast.error({\n        title: 'Geçersiz Tarih',\n        message: 'Lütfen ileri bir tarih seçin!',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      selectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimer(0); // Tüm sayacı sıfırla\n\n      iziToast.success({\n        title: 'Süre Doldu',\n        message: 'Geri sayım tamamlandı!',\n        position: 'topRight',\n      });\n\n      return;\n    }\n\n    updateTimer(diff); // Süreyi güncelle\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days: d, hours: h, minutes: m, seconds: s } = convertMs(ms);\n\n  days.textContent = addLeadingZero(d);\n  hours.textContent = addLeadingZero(h);\n  minutes.textContent = addLeadingZero(m);\n  seconds.textContent = addLeadingZero(s);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dateInput","startBtn","days","hours","minutes","seconds","selectedDate","timerId","flatpickr","selectedDates","now","iziToast","diff","updateTimer","ms","d","h","m","s","convertMs","addLeadingZero","value"],"mappings":"2FAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAEhDC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EAAe,KACfC,EAAU,KAEdN,EAAS,SAAW,GAEpBO,EAAUR,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQS,EAAe,CACrB,MAAMC,EAAM,IAAI,KAEZD,EAAc,CAAC,GAAKC,GACtBC,EAAS,MAAM,CACb,MAAO,iBACP,QAAS,gCACT,SAAU,UAClB,CAAO,EACDV,EAAS,SAAW,KAEpBK,EAAeG,EAAc,CAAC,EAC9BR,EAAS,SAAW,GAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GAEpBM,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAON,EADD,IAAI,KAGhB,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAO,EACrBM,EAAY,CAAC,EAEbF,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,yBACT,SAAU,UAClB,CAAO,EAED,MACD,CAEDE,EAAYD,CAAI,CACjB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAMC,EAAG,MAAOC,EAAG,QAASC,EAAG,QAASC,CAAC,EAAKC,EAAUL,CAAE,EAElEZ,EAAK,YAAckB,EAAeL,CAAC,EACnCZ,EAAM,YAAciB,EAAeJ,CAAC,EACpCZ,EAAQ,YAAcgB,EAAeH,CAAC,EACtCZ,EAAQ,YAAce,EAAeF,CAAC,CACxC,CAEA,SAASC,EAAUL,EAAI,CAQrB,MAAMZ,EAAO,KAAK,MAAMY,EAAK,KAAG,EAE1BX,EAAQ,KAAK,MAAOW,EAAK,MAAO,IAAI,EAEpCV,EAAU,KAAK,MAAQU,EAAK,MAAO,KAAQ,GAAM,EAEjDT,EAAU,KAAK,MAASS,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAZ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASe,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}